# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================

# MSBA Team: This is just an example of some of the stuff we'll want to do in
#   yaml. DELETE BEFORE DELIVERABLE.

# Configuration for running the complete pipeline including modeling and eval.

# Absolute paths to non-code resources.
file_paths:
  queries: "/home/jupyter/demand-forecasting-mvm/queries"
  automl_service_account_key: "/home/jupyter/.oauth_keys/automl_service_account_key.json"


# Global config used by multiple pipelie steps. Also made available
# as parameters to all SQL queries.
global:
  # Project and dataset configuration.
  project_id: "PROJECT_ID_GOES_HERE"

  # Clean data, minor refined versions of provided data.
  source_dataset: "CFPB data wherever it is cloud-public-data.something.something?"
  
  # Split features into training and prediction.
  features_train_table: "FeaturesTrain"
  features_predict_table: "FeaturesPredict"

  # Output tables for predictions and failed predictions from the batch
  # prediction job, ex. numeric column recieved a string.
  predictions_table: "Predictions"
  failed_predictions_table: "FailedPredictions"
  
  # Eval?
  eval_table: "Evaluation"
  eval_metrics_table: "EvaluationMetrics"

  # AutoML Parameters. It is assumed that no other datasets or models have
  # been created with these names, or the pipeline will fail. They can be
  # deleted using the client, or the UI.
  dataset_display_name: "CFPBDataset"
  model_display_name: "CFPBModel"
  automl_compute_region: "us-central1"

  # Final model will be trained on test data, metrics are currently based
  # on the predict split instead. AutoML Requires at least one row of test data,

  # MSBA TEAM: If we feel like it, we can implement filtering on the source data.
  #   Like to only predict certain categories, or banks or something, probably
  #   a low priority feature.
  # This boolean will switch off the filters when set to false.
  apply_filters: true

  # MSBA team -- this doesn't apply to us but its a general example of how
  #  some filtering could work. These settings all end up in the WHERE
  #  clause of a SQL query.
  brand: "2" 
  division: "52" # Women's
  departments:
    - "210" # Knits
    - "132" # Sweaters
    - "40"  # Tall
    - "380" # Pants
    - "370" # Leather & Outerwear
    - "373" # Intimates
    - "10"  # Woven Shirts
    - "22"  # Suits & Separates

# MSBA Team: I've removed these files, but this is a general idea of how 
#   queries in the pipeline could be specified.
# Files with templated queries, in file_paths.queries.
query_files:
  # Transforms (SELECT blocks) for BQDS ingestion.
  ingestion:
    inventory: "clean_inv.sql"
    transaction: "clean_txn.sql"
    location: "clean_loc.sql"
    sku: "clean_sku.sql"
  # Creates the tables of denormalized sales per week, loc, sku.
  weekly_sales: "weekly_sales.sql"
  # Creates the table of features per week, loc, cc.
  forecasting_features: "forecasting_features.sql"
  # Splits the forecasting features into training and prediction.
  forecasting_features_split: "forecasting_features_split.sql"
  # Combine actual target values from forecasting features with predictions.
  backtest: "backtest.sql"
  # Generate metrics comparing predictions with actuals.
  backtest_metrics: "metrics.sql"

# MSBA team: This is a section of the config for individual paremeters
#  substituted into SQL queries.
# Parameters specific to individual SQL pipeline steps.
query_params:

  weekly_sales:
    partition_field: "wk_start_dt"

  forecasting_features:
    partition_field: "wk_start_dt"

  forecasting_features_train:
    partition_field: "wk_start_dt"
    keep_prediction_features: false

  forecasting_features_predict:
    partition_field: "wk_start_dt"
    keep_prediction_features: true

  backtest:
    partition_field: "wk_start_dt"
    prediction_column: "predicted_sls_qty"

  backtest_metrics:
    prediction_column: "predicted_sls_qty"

# Training parameters for the model.
model:
  # See https://cloud.google.com/automl-tables/docs/train for more details
  # Training objective and maximum train time, early stopping is enabled.
  train_budget_hours: 3
  optimization_objective: "MINIMIZE_RMSE"
  
  # See https://cloud.google.com/automl-tables/docs/prepare for more details on
  # the target, time, and split columns.
  # Target column to predict, historical values used.
  target_column: "sls_qty"
  # Date/Timestamp to index time series, used as a feature as well.
  time_column: "wk_start_dt"
  # Split dataset into training, validation, and test.
  split_column: "split"
  # Weight the training loss for each row (not time series).
  weight_column: "weight"

  # Columns in dataset to exclude from training, will still appear in prediction.
  # Target (model.target_column), Split (model.split_column), Weight (unused),
  # and Key column (defined below in columns) must be in the
  # exclude_columns list or create_model will raise an exception.
  exclude_columns:
    - "cc_key"
    - "loc_key"
    - "sls_qty"
    - "split"
    - "weight"
    - "id"
  # MSBA team: here is how some parameters for an automl forecasting 
  #   model was defined. General eaxample of type code will be important.
  #   forecasting type doesn't matter for us.
  # Define the data type, nullability, and forecasting type for every column.
  # Values for type_code: "CATEGORY", "STRING", "FLOAT64", "TIMESTAMP".
  # Values for forecasting_type:
  #  "KEY" unique identifier for each time series,
  #      ex. the concatenation of cc and loc keys.
  #      Each dataset must have exactly one "KEY" column.
  #  "KEY_METADATA" time independent attributes of time series,
  # .    ex. color family description, store sales floor square footage.
  #  "TIME_SERIES_AVAILABLE_PAST_ONLY" time dependent, only history available,
  #      ex. available inventory, average retail sales price.
  #  "TIME_SERIES_AVAILABLE_PAST_AND_FUTURE" time dep known for forecast horizon.
  #      ex. holiday, planned promotion.
  columns:

    "bld_loc_desc":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "brd_cls_desc":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "brd_scls_desc":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "cc_key":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "cc_rtl_sls_prc_amt":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "cc_sls_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "clr_fmy_desc":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "dnrm_cur_rtl_prc_amt":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "dnrm_orig_rtl_prc_amt":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "end_aval_inv_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "end_ixit_un_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "id":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "KEY"

    "itm_shrt_desc":
      type_code: "STRING"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "loc_key":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "loc_sls_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "mstk_un_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "neg_sls_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "pos_sls_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "rtl_sls_prc_amt":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "scls_loc_sls_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "sku_count":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "sls_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_ONLY"

    "split":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_AND_FUTURE"

    "str_frmt_typ_cd_id":
      type_code: "CATEGORY"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "tot_str_sls_area_qty":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "KEY_METADATA"

    "weeks_aval":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_AND_FUTURE"

    "weight":
      type_code: "FLOAT64"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_AND_FUTURE"

    "wk_start_dt":
      type_code: "TIMESTAMP"
      nullable: false
      forecasting_type: "TIME_SERIES_AVAILABLE_PAST_AND_FUTURE"